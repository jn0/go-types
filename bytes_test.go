package types

import "fmt"

func ExampleBytes() {
	var b Bytes
	b.Add(1)
	for i := 0; i < 64; i++ {
		fmt.Printf("[%2d] %016X = %20d = %10s (%12s) (%13s)\n",
			i, uint64(b), b, b, b.Rate(123.), b.BitRate(123.))
		b = b * 2
	}
	b.Assign(BYTES_MAX)
	fmt.Printf("[%2d] %016X = %20d = %10s (%12s) (%13s)\n",
		64, uint64(b), b, b, b.Rate(123.), b.BitRate(123.))
	b.IncrementBy(Bytes(1))
	fmt.Printf("[%2d] %016X = %20d = %10s (%12s) (%13s)\n",
		65, uint64(b), b, b, b.Rate(123.), b.BitRate(123.))
// Output:
// [ 0] 0000000000000001 =                    1 =         1B (        0B/s) (        0 bps)
// [ 1] 0000000000000002 =                    2 =         2B (        0B/s) (        0 bps)
// [ 2] 0000000000000004 =                    4 =         4B (        0B/s) (        0 bps)
// [ 3] 0000000000000008 =                    8 =         8B (        0B/s) (        0 bps)
// [ 4] 0000000000000010 =                   16 =        16B (        0B/s) (        1 bps)
// [ 5] 0000000000000020 =                   32 =        32B (        0B/s) (        2 bps)
// [ 6] 0000000000000040 =                   64 =        64B (        0B/s) (        4 bps)
// [ 7] 0000000000000080 =                  128 =       128B (        1B/s) (        8 bps)
// [ 8] 0000000000000100 =                  256 =       256B (        2B/s) (       16 bps)
// [ 9] 0000000000000200 =                  512 =       512B (        4B/s) (       33 bps)
// [10] 0000000000000400 =                 1024 =   1.000KiB (        8B/s) (       66 bps)
// [11] 0000000000000800 =                 2048 =   2.000KiB (       16B/s) (      133 bps)
// [12] 0000000000001000 =                 4096 =   4.000KiB (       33B/s) (      266 bps)
// [13] 0000000000002000 =                 8192 =   8.000KiB (       66B/s) (      532 bps)
// [14] 0000000000004000 =                16384 =  16.000KiB (      133B/s) (  1.040Ki bps)
// [15] 0000000000008000 =                32768 =  32.000KiB (      266B/s) (  2.081Ki bps)
// [16] 0000000000010000 =                65536 =  64.000KiB (      532B/s) (  4.162Ki bps)
// [17] 0000000000020000 =               131072 = 128.000KiB (  1.040KiB/s) (  8.325Ki bps)
// [18] 0000000000040000 =               262144 = 256.000KiB (  2.081KiB/s) ( 16.650Ki bps)
// [19] 0000000000080000 =               524288 = 512.000KiB (  4.162KiB/s) ( 33.301Ki bps)
// [20] 0000000000100000 =              1048576 =   1.000MiB (  8.325KiB/s) ( 66.602Ki bps)
// [21] 0000000000200000 =              2097152 =   2.000MiB ( 16.650KiB/s) (133.203Ki bps)
// [22] 0000000000400000 =              4194304 =   4.000MiB ( 33.301KiB/s) (266.406Ki bps)
// [23] 0000000000800000 =              8388608 =   8.000MiB ( 66.602KiB/s) (532.812Ki bps)
// [24] 0000000001000000 =             16777216 =  16.000MiB (133.203KiB/s) (  1.041Mi bps)
// [25] 0000000002000000 =             33554432 =  32.000MiB (266.406KiB/s) (  2.081Mi bps)
// [26] 0000000004000000 =             67108864 =  64.000MiB (532.812KiB/s) (  4.163Mi bps)
// [27] 0000000008000000 =            134217728 = 128.000MiB (  1.041MiB/s) (  8.325Mi bps)
// [28] 0000000010000000 =            268435456 = 256.000MiB (  2.081MiB/s) ( 16.650Mi bps)
// [29] 0000000020000000 =            536870912 = 512.000MiB (  4.163MiB/s) ( 33.301Mi bps)
// [30] 0000000040000000 =           1073741824 =   1.000GiB (  8.325MiB/s) ( 66.602Mi bps)
// [31] 0000000080000000 =           2147483648 =   2.000GiB ( 16.650MiB/s) (133.203Mi bps)
// [32] 0000000100000000 =           4294967296 =   4.000GiB ( 33.301MiB/s) (266.407Mi bps)
// [33] 0000000200000000 =           8589934592 =   8.000GiB ( 66.602MiB/s) (532.813Mi bps)
// [34] 0000000400000000 =          17179869184 =  16.000GiB (133.203MiB/s) (  1.041Gi bps)
// [35] 0000000800000000 =          34359738368 =  32.000GiB (266.407MiB/s) (  2.081Gi bps)
// [36] 0000001000000000 =          68719476736 =  64.000GiB (532.813MiB/s) (  4.163Gi bps)
// [37] 0000002000000000 =         137438953472 = 128.000GiB (  1.041GiB/s) (  8.325Gi bps)
// [38] 0000004000000000 =         274877906944 = 256.000GiB (  2.081GiB/s) ( 16.650Gi bps)
// [39] 0000008000000000 =         549755813888 = 512.000GiB (  4.163GiB/s) ( 33.301Gi bps)
// [40] 0000010000000000 =        1099511627776 =   1.000TiB (  8.325GiB/s) ( 66.602Gi bps)
// [41] 0000020000000000 =        2199023255552 =   2.000TiB ( 16.650GiB/s) (133.203Gi bps)
// [42] 0000040000000000 =        4398046511104 =   4.000TiB ( 33.301GiB/s) (266.407Gi bps)
// [43] 0000080000000000 =        8796093022208 =   8.000TiB ( 66.602GiB/s) (532.813Gi bps)
// [44] 0000100000000000 =       17592186044416 =  16.000TiB (133.203GiB/s) (  1.041Ti bps)
// [45] 0000200000000000 =       35184372088832 =  32.000TiB (266.407GiB/s) (  2.081Ti bps)
// [46] 0000400000000000 =       70368744177664 =  64.000TiB (532.813GiB/s) (  4.163Ti bps)
// [47] 0000800000000000 =      140737488355328 = 128.000TiB (  1.041TiB/s) (  8.325Ti bps)
// [48] 0001000000000000 =      281474976710656 = 256.000TiB (  2.081TiB/s) ( 16.650Ti bps)
// [49] 0002000000000000 =      562949953421312 = 512.000TiB (  4.163TiB/s) ( 33.301Ti bps)
// [50] 0004000000000000 =     1125899906842624 =   1.000PiB (  8.325TiB/s) ( 66.602Ti bps)
// [51] 0008000000000000 =     2251799813685248 =   2.000PiB ( 16.650TiB/s) (133.203Ti bps)
// [52] 0010000000000000 =     4503599627370496 =   4.000PiB ( 33.301TiB/s) (266.407Ti bps)
// [53] 0020000000000000 =     9007199254740992 =   8.000PiB ( 66.602TiB/s) (532.813Ti bps)
// [54] 0040000000000000 =    18014398509481984 =  16.000PiB (133.203TiB/s) (  1.041Pi bps)
// [55] 0080000000000000 =    36028797018963968 =  32.000PiB (266.407TiB/s) (  2.081Pi bps)
// [56] 0100000000000000 =    72057594037927936 =  64.000PiB (532.813TiB/s) (  4.163Pi bps)
// [57] 0200000000000000 =   144115188075855872 = 128.000PiB (  1.041PiB/s) (  8.325Pi bps)
// [58] 0400000000000000 =   288230376151711744 = 256.000PiB (  2.081PiB/s) ( 16.650Pi bps)
// [59] 0800000000000000 =   576460752303423488 = 512.000PiB (  4.163PiB/s) ( 33.301Pi bps)
// [60] 1000000000000000 =  1152921504606846976 =   1.000EiB (  8.325PiB/s) ( 66.602Pi bps)
// [61] 2000000000000000 =  2305843009213693952 =   2.000EiB ( 16.650PiB/s) (133.203Pi bps)
// [62] 4000000000000000 =  4611686018427387904 =   4.000EiB ( 33.301PiB/s) (266.407Pi bps)
// [63] 8000000000000000 =  9223372036854775808 =   8.000EiB ( 66.602PiB/s) (532.813Pi bps)
// [64] FFFFFFFFFFFFFFFF = 18446744073709551615 =  16.000EiB (133.203PiB/s) (  1.041Ei bps)
// [65] 0000000000000000 =                    0 =         0B (        0B/s) (        0 bps)
}
